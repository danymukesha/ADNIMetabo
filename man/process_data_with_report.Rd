% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{process_data_with_report}
\alias{process_data_with_report}
\title{Process and impute data below Limits of Detection (LOD) with reporting}
\usage{
process_data_with_report(raw_data, LODs, inj_type = "FIA", qc_samples = FALSE)
}
\arguments{
\item{raw_data}{is a data frame containing the raw data to be processed.
Columns should represent analytes, and rows should represent samples.}

\item{LODs}{is a data frame containing information about analytes and
their respective LOD values. Must include columns:
\itemize{
\item \verb{Analyte (short name)}: Short names of analytes matching
the column names in \code{raw_data}.
\item \verb{LOD (µM)}: The limit of detection for each analyte.
}}

\item{inj_type}{is the injection type. e.g.: FIA or UPLC.
Please provide a corrected name of injection method in quotes.}

\item{qc+samples}{If TRUE, you intend to process QC samples, otherwise
study samples. default is FALSE.}
}
\value{
a list with two components:
\itemize{
\item \code{processed_data}: is a processed version of the input \code{raw_data}.
\item \code{report}: is a list containing details of removed and imputed columns.
}
}
\description{
this \code{f()} processes a dataset by identifying analytes with values
below the Limit of Detection (LOD), imputing these values using a logspline
distribution, and removing columns with specific conditions such as all
values being below LOD or missing. It provides a summary report
of the processing steps.
}
\note{
The \code{logspline} package doesn't support setting minimum and maximum values
directly in the \code{rlogspline} function, so instead, we needed to fit
a logspline model to a set of values between \code{LOD/2} and \code{LOD}.
Then, we can sample from this fitted distribution and clip the values
to stay within the desired range.
}
\examples{
\dontrun{
# example raw data
raw_data <- data.frame(
  Analyte1 = c(0.1, 0.05, NA, 0.2),
  Analyte2 = c(0, 0, 0, 0),
  Analyte3 = c(0.3, 0.4, 0.2, 0.1)
)

# example LODs table
LODs <- data.frame(
  `Analyte (short name)` = c("Analyte1", "Analyte2", "Analyte3"),
  `LOD (µM)` = c(0.15, 0.1, 0.25)
)

# process the raw data
result <- process_data_with_report(raw_data, LODs)
}
}
